# Reddit-Optimized ZSH Configuration (Without Zinit)
# Based on r/zsh, r/unixporn most upvoted setups
# =====================================================

# Environment variables
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export EDITOR="vim"
export ZSH="$HOME/.oh-my-zsh"

# Oh-My-Zsh configuration
ZSH_THEME=""  # Disabled for Starship
DISABLE_UNTRACKED_FILES_DIRTY="true"
COMPLETION_WAITING_DOTS="true"
HIST_STAMPS="yyyy-mm-dd"

# Reddit's most loved plugins
plugins=(
  git
  zsh-autosuggestions
  zsh-syntax-highlighting
  history-substring-search
  command-not-found
  extract
  z
  sudo
  web-search
  copypath
  copyfile
  dirhistory
  fzf
  docker
  kubectl
)

# Load Oh-My-Zsh
source $ZSH/oh-my-zsh.sh

# Auto-start tmux for SSH sessions (Reddit's favorite)
if [[ -n "$SSH_CLIENT" || -n "$SSH_TTY" ]] && [[ -z "$TMUX" ]] && [[ -z "$VSCODE_INJECTION" ]]; then
    tmux attach-session -t main 2>/dev/null || tmux new-session -s main
fi

# ============================================================
# STARSHIP PROMPT (Reddit's #1 choice)
# ============================================================
if command -v starship &>/dev/null; then
    eval "$(starship init zsh)"
fi

# ============================================================
# MODERN CLI TOOLS (Reddit favorites)
# ============================================================

# Eza - modern ls
if command -v eza &>/dev/null; then
    alias ls='eza --icons --group-directories-first'
    alias ll='eza -la --icons --group-directories-first'
    alias la='eza -a --icons --group-directories-first'
    alias lt='eza --tree --icons -a -I ".git|__pycache__|.mypy_cache|.ipynb_checkpoints"'
else
    alias ll='ls -alF'
    alias la='ls -A'
fi

# Bat - better cat
if command -v bat &>/dev/null; then
    export BAT_THEME="Dracula"
    alias cat='bat --style=plain'
    alias catn='bat --style=numbers'
fi

# Ripgrep aliases
if command -v rg &>/dev/null; then
    alias grep='rg'
fi

# fd aliases
if command -v fd &>/dev/null; then
    alias find='fd'
fi

# Zoxide - smarter cd
if command -v zoxide &>/dev/null; then
    eval "$(zoxide init zsh)"
    alias cd='z'
fi

# Git delta
if command -v delta &>/dev/null; then
    export GIT_PAGER='delta'
fi

# ============================================================
# FZF CONFIGURATION (Reddit's #1 productivity tool)
# ============================================================
if command -v fzf &>/dev/null; then
    export FZF_DEFAULT_OPTS='--height 60% --layout=reverse --border --preview "bat --style=numbers --color=always --line-range :500 {}"'
    
    if command -v fd &>/dev/null; then
        export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
        export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
        export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'
    fi
    
    # Load FZF keybindings
    [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
fi

# ============================================================
# ALIASES (Reddit community favorites)
# ============================================================

# Navigation
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

# Git shortcuts
alias g='git'
alias gst='git status'
alias gco='git checkout'
alias gcb='git checkout -b'
alias gp='git push'
alias gl='git pull'
alias gcm='git commit -m'
alias gd='git diff'
alias glog='git log --oneline --graph --decorate'

# Docker
alias d='docker'
alias dc='docker-compose'
alias dps='docker ps'
alias dpsa='docker ps -a'

# Kubernetes
alias k='kubectl'
alias kgp='kubectl get pods'
alias kgs='kubectl get services'

# System
alias myip='curl -s ifconfig.me'
alias ports='netstat -tulanp 2>/dev/null || sudo lsof -iTCP -sTCP:LISTEN -n -P'
alias weather='curl wttr.in'

# Tmux
alias ta='tmux attach -t'
alias ts='tmux new-session -s'
alias tl='tmux list-sessions'
alias tk='tmux kill-session -t'

# ============================================================
# FUNCTIONS (Reddit's most useful)
# ============================================================

# Make directory and cd into it
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Quick backup
backup() {
    cp "$1" "$1.backup-$(date +%Y%m%d-%H%M%S)"
}

# Extract any archive
extract() {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2)   tar xjf $1   ;;
            *.tar.gz)    tar xzf $1   ;;
            *.bz2)       bunzip2 $1   ;;
            *.rar)       unrar x $1   ;;
            *.gz)        gunzip $1    ;;
            *.tar)       tar xf $1    ;;
            *.tbz2)      tar xjf $1   ;;
            *.tgz)       tar xzf $1   ;;
            *.zip)       unzip $1     ;;
            *.Z)         uncompress $1;;
            *.7z)        7z x $1      ;;
            *)           echo "'$1' cannot be extracted" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Git clone and cd
gclone() {
    git clone "$1" && cd "$(basename "$1" .git)"
}

# ============================================================
# PATH ADDITIONS
# ============================================================
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$HOME/bin:$PATH"

# OS-specific
if [[ "$OSTYPE" == "darwin"* ]]; then
    export PATH="/opt/homebrew/bin:$PATH"
    export PATH="/opt/homebrew/sbin:$PATH"
fi

# ============================================================
# PERFORMANCE OPTIMIZATIONS
# ============================================================
# History
HISTSIZE=50000
SAVEHIST=50000
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS
setopt SHARE_HISTORY

# Directory navigation
setopt AUTO_CD
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt PUSHDMINUS

# Completion
autoload -U compinit && compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

# Load local config if exists
[ -f ~/.zshrc.local ] && source ~/.zshrc.local