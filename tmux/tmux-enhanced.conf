# Modern TMUX Configuration - Reddit Community Edition
# =====================================================
# Based on the most upvoted configs from r/tmux and r/unixporn

# =====================================================
# GENERAL SETTINGS
# =====================================================

# Set prefix to Ctrl-a (like screen, most popular on Reddit)
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Enable true color support
set -g default-terminal "screen-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed
set -g renumber-windows on

# Enable mouse support
set -g mouse on

# Increase scrollback buffer
set-option -g history-limit 50000

# Fix escape delay (important for vim)
set -sg escape-time 0

# Enable focus events (for vim autoread)
set -g focus-events on

# =====================================================
# KEY BINDINGS (Reddit's most loved)
# =====================================================

# Reload config with notification
bind r source-file ~/.tmux.conf \; display-message "Config reloaded! ðŸ”„"

# Better window splitting
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Vim-style pane navigation (most upvoted)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits
# (Requires vim-tmux-navigator plugin in Vim)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# Pane resizing with vim keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Quick pane cycling
bind -r Tab select-pane -t :.+

# Window navigation
bind -r C-h previous-window
bind -r C-l next-window
bind Tab last-window  # Quick switch to last window

# Move windows left/right
bind -r < swap-window -t -1 \; previous-window
bind -r > swap-window -t +1 \; next-window

# =====================================================
# COPY MODE (Vi-style - Reddit's preference)
# =====================================================

setw -g mode-keys vi

# Better copy mode bindings
bind Enter copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line

# Platform-specific clipboard integration
if-shell "uname | grep -q Darwin" {
    bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'
    bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy'
} {
    bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
    bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
}

# =====================================================
# POPUP WINDOWS (tmux 3.2+ - Reddit's new favorite)
# =====================================================

# Quick floating terminal
bind Space display-popup -E -w 80% -h 80%

# Floating terminal with current directory
bind C-Space display-popup -E -d "#{pane_current_path}" -w 80% -h 80%

# Git status popup
bind g display-popup -E -w 90% -h 90% -d "#{pane_current_path}" "lazygit || (git status && git log --oneline --graph -20; read)"

# File manager popup
bind e display-popup -E -w 90% -h 90% -d "#{pane_current_path}" "ranger || lf || (ls -la; read)"

# System monitor popup
bind m display-popup -E -w 95% -h 95% "btop || htop || top"

# Quick notes
bind n display-popup -E -w 80% -h 80% -d "~/notes" "vim quick-note-$(date +%Y%m%d-%H%M%S).md"

# =====================================================
# SESSION MANAGEMENT (Reddit's workflow)
# =====================================================

# Session navigation with preview
bind s display-popup -E -w 80% -h 80% 'tmux list-sessions | fzf --preview "tmux list-windows -t {}" | cut -d: -f1 | xargs tmux switch-client -t'

# Create new session
bind S command-prompt -p "New session name:" "new-session -s '%%'"

# Quick session switching
bind -r ( switch-client -p
bind -r ) switch-client -n

# =====================================================
# PANE BORDERS & TITLES
# =====================================================

# Pane borders
set -g pane-border-style 'fg=colour238,bg=default'
set -g pane-active-border-style 'fg=colour39,bg=default'

# Pane border status
set -g pane-border-status top
set -g pane-border-format " #{?pane_active,#[fg=colour39],#[fg=colour244]}#{pane_index} #{pane_current_command} "

# =====================================================
# STATUS BAR (Reddit's minimal but informative style)
# =====================================================

# Status bar position
set -g status-position bottom

# Update status bar every second
set -g status-interval 1

# Status bar colors
set -g status-style 'bg=colour235,fg=colour247'

# Left side: Session name + host
set -g status-left-length 50
set -g status-left '#[fg=colour235,bg=colour39,bold] #S #[fg=colour39,bg=colour241,nobold]#[fg=colour233,bg=colour241] #(whoami)@#h #[fg=colour241,bg=colour235]'

# Window status
set -g window-status-format '#[fg=colour235,bg=colour238]#[fg=colour247,bg=colour238] #I  #W #[fg=colour238,bg=colour235]'
set -g window-status-current-format '#[fg=colour235,bg=colour39]#[fg=colour235,bg=colour39,bold] #I  #W #[fg=colour39,bg=colour235,nobold]'
set -g window-status-separator ''

# Right side: Git branch + Time + Battery
set -g status-right-length 100
set -g status-right '#[fg=colour241,bg=colour235]#[fg=colour233,bg=colour241] #(cd #{pane_current_path}; git branch --show-current 2>/dev/null || echo "â€”") #[fg=colour244,bg=colour241]#[fg=colour233,bg=colour244] %H:%M:%S #[fg=colour39,bg=colour244]#[fg=colour235,bg=colour39,bold] %d-%b-%y '

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off
setw -g window-status-activity-style 'fg=colour39,bg=colour235,bold'

# =====================================================
# PRODUCTIVITY FEATURES
# =====================================================

# Synchronize panes
bind y setw synchronize-panes on \; display 'Sync: ON'
bind Y setw synchronize-panes off \; display 'Sync: OFF'

# Toggle mouse
bind m set -g mouse on \; display 'Mouse: ON'
bind M set -g mouse off \; display 'Mouse: OFF'

# Save pane history
bind P command-prompt -p 'save history to:' -I '~/tmux-history-%Y%m%d-%H%M%S.txt' 'capture-pane -S - -p > %%'

# Quick layouts
bind ! select-layout even-horizontal
bind @ select-layout even-vertical
bind '#' select-layout main-horizontal
bind '$' select-layout main-vertical
bind % select-layout tiled

# Open man page in new pane
bind / command-prompt -p "man:" "split-window -h 'man %%'"

# Quick pane operations
bind x kill-pane  # Skip confirmation
bind X kill-window
bind q display-panes -d 3000  # Display pane numbers for 3 seconds

# URL view (requires urlview or urlscan)
bind u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n urlview '$SHELL -c "urlview < /tmp/tmux-buffer || urlscan < /tmp/tmux-buffer"'

# =====================================================
# NESTING LOCAL AND REMOTE SESSIONS
# =====================================================

# F12 to toggle local/remote (for nested tmux)
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "bg=colour238,fg=colour244" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  refresh-client -S

# =====================================================
# TMUX PLUGIN MANAGER (Reddit's essential plugins)
# =====================================================

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'        # Sensible defaults
set -g @plugin 'tmux-plugins/tmux-resurrect'       # Save/restore sessions
set -g @plugin 'tmux-plugins/tmux-continuum'       # Auto save/restore
set -g @plugin 'tmux-plugins/tmux-yank'           # Better copy/paste
set -g @plugin 'tmux-plugins/tmux-copycat'        # Regex search
set -g @plugin 'tmux-plugins/tmux-open'           # Open URLs/files
set -g @plugin 'tmux-plugins/tmux-prefix-highlight' # Highlight when prefix pressed
set -g @plugin 'christoomey/vim-tmux-navigator'   # Seamless vim navigation
set -g @plugin 'laktak/extrakto'                  # Fuzzy find and copy

# Resurrect settings
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# Continuum settings
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# Prefix highlight
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_sync_prompt 'Sync'

# Extrakto
set -g @extrakto_split_direction 'v'
set -g @extrakto_split_size '15'

# Initialize TMUX plugin manager (keep this line at the very bottom)
run '~/.tmux/plugins/tpm/tpm'

# =====================================================
# LOCAL OVERRIDES
# =====================================================

# Source local config if it exists
if-shell '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'