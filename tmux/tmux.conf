# Claude Code Optimized tmux configuration - IMPROVED VERSION
# For tmux 3.5a with productivity enhancements

# Set prefix to Ctrl-a (like screen)
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support (toggle with Ctrl-a m/M) 
# DEFAULT: OFF for easy copy/paste
set -g mouse off

# Don't rename windows automatically
set-option -g allow-rename off

# Increase scrollback buffer size
set-option -g history-limit 50000

# --- NEW: Popup windows (tmux 3.2+) ---
# Quick popup terminal with Ctrl-a p
bind p display-popup -E -w 80% -h 80%
# Popup with current directory
bind P display-popup -E -d "#{pane_current_path}" -w 80% -h 80%
# Quick git status popup
bind g display-popup -E -w 80% -h 80% "git status && echo && git log --oneline -10; read -p 'Press enter to close'"
# Quick file browser
bind f display-popup -E -w 80% -h 80% "ls -la; read -p 'Press enter to close'"

# --- NEW: Better session management ---
# Session switcher with preview
bind s choose-tree -Zs
# Create new session with name prompt
bind S command-prompt -p "New session name:" "new-session -s '%%'"
# Kill session
bind X confirm-before -p "Kill session #S? (y/n)" kill-session

# --- NEW: Smart pane navigation ---
# Navigate panes with Option+Arrow (no prefix needed)
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# --- NEW: Improved copy mode ---
# Enter copy mode with just Ctrl+[
bind -n C-[ copy-mode
# Search with /
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# --- NEW: Window management shortcuts ---
# Quick window switching with Ctrl+Number (no prefix)
bind -n C-1 select-window -t 1
bind -n C-2 select-window -t 2
bind -n C-3 select-window -t 3
bind -n C-4 select-window -t 4
bind -n C-5 select-window -t 5
bind -n C-6 select-window -t 6
bind -n C-7 select-window -t 7
bind -n C-8 select-window -t 8
bind -n C-9 select-window -t 9

# Window switching with Option+Shift+Arrow (no prefix)
bind -n M-S-Left previous-window
bind -n M-S-Right next-window

# Simple [ and ] for window switching (no prefix) - EASIEST!
bind -n M-[ previous-window    # Option+[
bind -n M-] next-window        # Option+]

# Alternative with Option+j/k (vim style)
bind -n M-j previous-window
bind -n M-k next-window

# Or use Option+Tab and Option+Shift+Tab (like browser tabs)
bind -n M-Tab next-window
bind -n M-S-Tab previous-window

# Function keys for window switching (no prefix)
bind -n F1 select-window -t 1
bind -n F2 select-window -t 2
bind -n F3 select-window -t 3
bind -n F4 select-window -t 4

# Alternative: PageUp/PageDown for window switching (no prefix)
bind -n PPage previous-window    # PageUp
bind -n NPage next-window        # PageDown

# Move windows with Ctrl+Shift+Arrow (no prefix)
bind -n C-S-Left swap-window -t -1\; select-window -t -1
bind -n C-S-Right swap-window -t +1\; select-window -t +1

# Quick window switching with Alt+h/l (vim style, no prefix)
bind -n M-h previous-window
bind -n M-l next-window

# Quick last window with Option+Space (no prefix)
bind -n M-Space last-window

# --- NEW: Pane synchronization indicator ---
# Shows [SYNC] in status when panes are synchronized
set -ag status-right '#{?pane_synchronized, [SYNC],}'

# --- NEW: Better status bar ---
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-left '#[fg=colour233,bg=colour245,bold] #S #[fg=colour245,bg=colour238] #(whoami)@#h '
set -g status-right '#{?pane_synchronized,[SYNC] ,}#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 60
set -g status-left-length 40

# Window status with current path
setw -g window-status-current-format ' #I:#[fg=colour255]#W#[fg=colour50]#F #{?pane_synchronized,[S],} '
setw -g window-status-format ' #I:#[fg=colour250]#W#[fg=colour244]#F '

# --- NEW: Save/Restore pane contents ---
# Save pane history to file
bind-key H command-prompt -p 'save history to:' -I '~/tmux-history-%Y%m%d-%H%M%S.txt' 'capture-pane -S -50000 -p > %%'

# --- NEW: Quick layouts ---
bind ! select-layout even-horizontal
bind @ select-layout even-vertical
bind '#' select-layout main-horizontal
bind '$' select-layout main-vertical
bind % select-layout tiled

# --- NEW: Pane borders with titles ---
set -g pane-border-status top
set -g pane-border-format " #{pane_index}: #{pane_current_command} "
set -g pane-border-style 'fg=colour238'
set -g pane-active-border-style 'fg=colour51'

# Quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Split panes using | and - with current path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}" # Additional binding
bind _ split-window -v -c "#{pane_current_path}"   # Additional binding
unbind '"'
unbind %

# --- NEW: Quick pane resizing with repeat ---
bind -r C-h resize-pane -L 10
bind -r C-j resize-pane -D 10
bind -r C-k resize-pane -U 10
bind -r C-l resize-pane -R 10

# Reload config with notification
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# Toggle mouse on/off
bind m set -g mouse on \; display 'Mouse: ON'
bind M set -g mouse off \; display 'Mouse: OFF'

# Vim-style pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Enable vi mode
setw -g mode-keys vi

# Copy/paste improvements
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

# Fix escape delay (important for vim)
set -sg escape-time 0

# Enable 256 colors and true color
set -g default-terminal "screen-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# OS-specific clipboard integration
set -g set-clipboard on

# Platform-specific settings
if-shell 'test "$(uname)" = "Darwin"' '
    # macOS clipboard
    set-option -g default-command "reattach-to-user-namespace -l $SHELL"
    bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
    bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
    bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
' '
    # Linux clipboard
    bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
    bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
    bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
'

# --- NEW: Pane joining/breaking ---
# Join pane from another window
bind j command-prompt -p "join pane from:" "join-pane -s '%%'"
# Send pane to another window
bind J command-prompt -p "send pane to:" "join-pane -t '%%'"
# Break pane into new window
bind b break-pane -d

# Synchronize panes toggle with visual indicator
bind e setw synchronize-panes on \; display 'Sync: ON'
bind E setw synchronize-panes off \; display 'Sync: OFF'

# Window management with better shortcuts
bind c new-window -c "#{pane_current_path}"
bind n next-window
bind p previous-window
bind Tab last-window  # Quick switch to last window

# Create new window with Alt+n (no prefix)
bind -n M-n new-window -c "#{pane_current_path}"

# Close window with Alt+w (no prefix, with confirmation)
bind -n M-w confirm-before -p "Kill window #W? (y/n)" kill-window

# --- NEW: Window monitoring ---
setw -g monitor-activity on
setw -g monitor-bell on
set -g visual-activity off
set -g visual-bell off

# --- NEW: Hooks for automation ---
# Auto-rename window based on current command
set-hook -g after-new-window 'run-shell "sleep 0.1" ; refresh-client -S'
set-hook -g after-split-window 'run-shell "sleep 0.1" ; refresh-client -S'

# Logging toggle
bind L pipe-pane -o "cat >>~/tmux-#W-%Y%m%d-%H%M%S.log" \; display "Toggled logging to ~/tmux-#W-%Y%m%d-%H%M%S.log"

# --- NEW: Quick directory access ---
bind D new-window -c ~/Desktop -n desktop
bind C new-window -c ~/Desktop/code -n code
bind . new-window -c ~/.config -n config

# SSH session shortcuts with auto-naming
bind O new-window -n oracle "ssh oracle"
bind e new-window -n evertz "ssh evertz"

# Display pane numbers longer
set -g display-panes-time 3000

# --- NEW: Better search ---
# Search for windows/panes with content
bind / command-prompt -p "search:" "find-window -Z '%%'"

# Renumber windows on close
set -g renumber-windows on

# --- TMUX PLUGIN MANAGER ---
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'  # Save/restore sessions with Ctrl-a Ctrl-s / Ctrl-a Ctrl-r
set -g @plugin 'tmux-plugins/tmux-continuum'  # Auto save/restore
set -g @plugin 'tmux-plugins/tmux-yank'       # Better copy/paste
set -g @plugin 'tmux-plugins/tmux-copycat'    # Regex search with prefix + /
set -g @plugin 'tmux-plugins/tmux-open'       # Open URLs/files from tmux
set -g @plugin 'tmux-plugins/tmux-battery'    # Battery status in status bar
set -g @plugin 'tmux-plugins/tmux-cpu'        # CPU usage in status bar
set -g @plugin 'laktak/extrakto'              # Fuzzy find and copy text from pane

# Resurrect settings
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# Continuum settings
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15' # Save every 15 minutes

# Initialize TMUX plugin manager (keep this line at the very bottom)
run '~/.tmux/plugins/tpm/tpm'

# --- NEW: Custom functions ---
# Quick command runner
bind x command-prompt -p "Run command in all panes:" "setw synchronize-panes on ; send-keys '%%' Enter ; setw synchronize-panes off"

# Show current directory of all panes
bind i display-message "Pane #{pane_index}: #{pane_current_path}"